*&---------------------------------------------------------------------*
*&  Include           MZED11_SFLIGHT_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat USING p_key p_field p_text p_ref_table p_ref_field.

  gs_fcat-key = p_key.
  gs_fcat-fieldname = p_field.
  gs_fcat-coltext = p_text.
  gs_fcat-ref_table = p_ref_table.
  gs_fcat-ref_field = p_ref_field.

  CASE p_field.
    WHEN 'PRICE'.
      gs_fcat-cfieldname = 'CURRENCY'.
      gs_fcat-emphasize = 'C611'.
      gs_fcat-do_sum = 'X'.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR gs_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REFRESH_GIRD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_gird .

  gs_stable-row = 'X'.
  gs_stable-col = 'X'.

  CALL METHOD go_grid->refresh_table_display
    EXPORTING
      is_stable      = gs_stable
      i_soft_refresh = ' '.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  EXIT0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit0100 INPUT.
  CALL METHOD : go_grid->free, go_container->free.

  FREE : go_grid, go_container.

  LEAVE TO SCREEN 0.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .
  CLEAR : gt_data, gt_data[].

  SELECT carrid connid fldate planetype price currency
    INTO CORRESPONDING FIELDS OF TABLE gt_data
    FROM sflight
   WHERE carrid = gv_carrid.

  IF sy-subrc NE 0.
    "여기에서는 STOP하면 안된다. PAI를 돌고 PBO로 다시 가야하기 때문에
    MESSAGE s000 WITH 'Data not found'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_INIT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_init_data .
  CLEAR : gt_data, gt_data[].
  SELECT carrid connid fldate planetype price currency
    INTO CORRESPONDING FIELDS OF TABLE gt_data
    FROM sflight.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_CARRID
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_carrid .
  DATA : BEGIN OF lt_carrid OCCURS 0,
           carrid   LIKE scarr-carrid,
           carrname LIKE scarr-carrname,
         END OF lt_carrid.

  CLEAR : lt_carrid, lt_carrid[].

  SELECT carrid carrname
    INTO CORRESPONDING FIELDS OF TABLE lt_carrid
    FROM scarr.

  IF sy-subrc NE 0.
    MESSAGE s000 WITH 'No Carrid data found'.
    EXIT.
  ENDIF.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = 'CARRID'
      dynpprog        = sy-repid
      dynpnr          = sy-dynnr
      dynprofield     = 'gv_carrid'
      window_title    = '항공사 ID'
      value_org       = 'S'
    TABLES
      value_tab       = lt_carrid[]
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
